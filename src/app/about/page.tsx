
'use client';

import { useState } from 'react';
import { Heart, ShoppingCart, Users, Star, Award, Truck, Shield, Headphones, CheckCircle } from 'lucide-react';

type TabKey = 'mission' | 'vision' | 'team';

export default function AboutPage() {
    const [activeTab, setActiveTab] = useState<TabKey>('mission');

    const stats = [
        { number: '10K+', label: 'Kh√°ch h√†ng h√†i l√≤ng', icon: Users },
        { number: '5M+', label: 'S·∫£n ph·∫©m ƒë√£ b√°n', icon: ShoppingCart },
        { number: '4.9/5', label: 'ƒê√°nh gi√° trung b√¨nh', icon: Star },
        { number: '99%', label: 'T·ª∑ l·ªá h√†i l√≤ng', icon: Heart }
    ];

    const values = [
        {
            icon: Shield,
            title: 'Ch·∫•t l∆∞·ª£ng ƒë·∫£m b·∫£o',
            description: 'T·∫•t c·∫£ s·∫£n ph·∫©m ƒë·ªÅu ƒë∆∞·ª£c ki·ªÉm tra nghi√™m ng·∫∑t tr∆∞·ªõc khi ƒë·∫øn tay kh√°ch h√†ng'
        },
        {
            icon: Truck,
            title: 'Giao h√†ng nhanh ch√≥ng',
            description: 'Cam k·∫øt giao h√†ng trong 24-48h v·ªõi d·ªãch v·ª• v·∫≠n chuy·ªÉn uy t√≠n'
        },
        {
            icon: Headphones,
            title: 'H·ªó tr·ª£ 24/7',
            description: 'ƒê·ªôi ng≈© chƒÉm s√≥c kh√°ch h√†ng lu√¥n s·∫µn s√†ng h·ªó tr·ª£ b·∫°n m·ªçi l√∫c'
        },
        {
            icon: Award,
            title: 'Gi√° c·∫£ h·ª£p l√Ω',
            description: 'Cam k·∫øt mang ƒë·∫øn s·∫£n ph·∫©m ch·∫•t l∆∞·ª£ng v·ªõi m·ª©c gi√° t·ªët nh·∫•t th·ªã tr∆∞·ªùng'
        }
    ];

    const timeline = [
        {
            year: '2018',
            title: 'Kh·ªüi ƒë·∫ßu',
            description: 'B·∫Øt ƒë·∫ßu v·ªõi m·ªôt c·ª≠a h√†ng nh·ªè v√† ∆∞·ªõc m∆° mang ƒë·∫øn tr·∫£i nghi·ªám mua s·∫Øm t·ªët nh·∫•t'
        },
        {
            year: '2019',
            title: 'M·ªü r·ªông',
            description: 'Ra m·∫Øt website v√† b·∫Øt ƒë·∫ßu b√°n h√†ng online, ph·ª•c v·ª• kh√°ch h√†ng to√†n qu·ªëc'
        },
        {
            year: '2021',
            title: 'Ph√°t tri·ªÉn',
            description: 'ƒê·∫°t m·ªëc 1000 ƒë∆°n h√†ng ƒë·∫ßu ti√™n v√† m·ªü r·ªông danh m·ª•c s·∫£n ph·∫©m'
        },
        {
            year: '2023',
            title: 'Hi·ªán t·∫°i',
            description: 'Tr·ªü th√†nh m·ªôt trong nh·ªØng n·ªÅn t·∫£ng th∆∞∆°ng m·∫°i ƒëi·ªán t·ª≠ uy t√≠n v·ªõi h√†ng ngh√¨n s·∫£n ph·∫©m'
        }
    ];

    const tabContent: Record<TabKey, { title: string; content: string }> = {
        mission: {
            title: 'S·ª© m·ªánh c·ªßa ch√∫ng t√¥i',
            content: 'Nesty mu·ªën tr·ªü th√†nh m·ªôt c√¥ng ty h√†ng ƒë·∫ßu trong lƒ©nh v·ª±c s·∫£n xu·∫•t v√† thi·∫øt k·∫ø gi√†y, d√©p. Ch√∫ng t√¥i h∆∞·ªõng ƒë·∫øn m·ª•c ti√™u b·ªÅn v·ªØng v√¨ v·∫≠y kh√¥ng ng·ª´ng n√¢ng cao ch·∫•t l∆∞·ª£ng s·∫£n ph·∫©m ƒë·ªÉ mang l·∫°i nh·ªØng tr·∫£i nghi·ªám t·ªët nh·∫•t cho kh√°ch h√†ng. Ch√∫ng t√¥i tin r·∫±ng vi·ªác duy tr√¨ m·ªôt quy tr√¨nh s·∫£n xu·∫•t ƒë·∫°t chu·∫©n qu·ªëc t·∫ø v√† v√† li√™n t·ª•c ƒë·ªïi m·ªõi s·∫Ω l√† ch√¨a kh√≥a ƒë·ªÉ th√†nh c√¥ng.'
        },
        vision: {
            title: 'T·∫ßm nh√¨n c·ªßa ch√∫ng t√¥i',
            content: 'Ch√∫ng t√¥i h∆∞·ªõng t·ªõi vi·ªác tr·ªü th√†nh n·ªÅn t·∫£ng th∆∞∆°ng m·∫°i ƒëi·ªán t·ª≠ h√†ng ƒë·∫ßu, n∆°i kh√°ch h√†ng c√≥ th·ªÉ t√¨m th·∫•y m·ªçi th·ª© h·ªç c·∫ßn v·ªõi ch·∫•t l∆∞·ª£ng t·ªët nh·∫•t. Ch√∫ng t√¥i mu·ªën x√¢y d·ª±ng m·ªôt c·ªông ƒë·ªìng mua s·∫Øm l√†nh m·∫°nh v√† b·ªÅn v·ªØng.'
        },
        team: {
            title: 'ƒê·ªôi ng≈© c·ªßa ch√∫ng t√¥i',
            content: 'ƒê·ªôi ng≈© c·ªßa ch√∫ng t√¥i bao g·ªìm nh·ªØng chuy√™n gia gi√†u kinh nghi·ªám trong lƒ©nh v·ª±c th∆∞∆°ng m·∫°i ƒëi·ªán t·ª≠, c√¥ng ngh·ªá v√† d·ªãch v·ª• kh√°ch h√†ng. Ch√∫ng t√¥i lu√¥n n·ªó l·ª±c kh√¥ng ng·ª´ng ƒë·ªÉ mang ƒë·∫øn tr·∫£i nghi·ªám t·ªët nh·∫•t cho kh√°ch h√†ng.'
        }
    };

    return (
        <div className="min-h-screen bg-gradient-to-br from-orange-50 to-orange-100">
            {/* Hero Section */}
            <section className="relative py-20 px-6 text-center bg-gradient-orange text-white overflow-hidden">
                <div className="absolute inset-0 bg-black/10"></div>
                <div className="relative max-w-4xl mx-auto">
                    <div className="animate-float mb-8">
                        <div className="w-24 h-24 mx-auto mb-6 bg-white/20 rounded-full flex items-center justify-center backdrop-blur-sm">
                            <Heart className="w-12 h-12 text-white animate-pulse-orange" />
                        </div>
                    </div>
                    <h1 className="text-5xl md:text-6xl font-bold mb-6 animate-fade-in">
                        V·ªÅ Ch√∫ng T√¥i
                    </h1>
                    <p className="text-xl md:text-2xl mb-8 opacity-95 max-w-2xl mx-auto">
                        Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi c√¢u chuy·ªán c·ªßa ch√∫ng t√¥i - h√†nh tr√¨nh mang ƒë·∫øn tr·∫£i nghi·ªám mua s·∫Øm tuy·ªát v·ªùi nh·∫•t
                    </p>
                    <div className="flex flex-wrap gap-4 justify-center">
                        <div className="px-6 py-3 bg-white/20 rounded-full backdrop-blur-sm">
                            <span className="text-sm font-medium">‚ú® Uy t√≠n</span>
                        </div>
                        <div className="px-6 py-3 bg-white/20 rounded-full backdrop-blur-sm">
                            <span className="text-sm font-medium">üöÄ Ch·∫•t l∆∞·ª£ng</span>
                        </div>
                        <div className="px-6 py-3 bg-white/20 rounded-full backdrop-blur-sm">
                            <span className="text-sm font-medium">üíé D·ªãch v·ª• t·ªët</span>
                        </div>
                    </div>
                </div>

                {/* Floating Elements */}
                <div className="absolute top-20 left-10 w-6 h-6 bg-white/20 rounded-full animate-float" style={{ animationDelay: '0s' }}></div>
                <div className="absolute top-32 right-16 w-4 h-4 bg-white/30 rounded-full animate-float" style={{ animationDelay: '1s' }}></div>
                <div className="absolute bottom-20 left-20 w-8 h-8 bg-white/15 rounded-full animate-float" style={{ animationDelay: '2s' }}></div>
                <div className="absolute bottom-32 right-12 w-5 h-5 bg-white/25 rounded-full animate-float" style={{ animationDelay: '1.5s' }}></div>
            </section>

            {/* Stats Section */}
            <section className="py-16 px-6 bg-white">
                <div className="max-w-6xl mx-auto">
                    <div className="grid grid-cols-2 md:grid-cols-4 gap-8">
                        {stats.map((stat, index) => (
                            <div key={index} className="text-center group hover-lift">
                                <div className="w-16 h-16 mx-auto mb-4 bg-gradient-orange rounded-2xl flex items-center justify-center animate-glow">
                                    <stat.icon className="w-8 h-8 text-white" />
                                </div>
                                <div className="text-3xl md:text-4xl font-bold text-gradient-orange mb-2">
                                    {stat.number}
                                </div>
                                <div className="text-gray-600 font-medium">
                                    {stat.label}
                                </div>
                            </div>
                        ))}
                    </div>
                </div>
            </section>

            {/* Tab Section */}
            <section className="py-16 px-6 bg-gradient-orange-light">
                <div className="max-w-4xl mx-auto">
                    <div className="text-center mb-12">
                        <h2 className="text-4xl font-bold text-gray-900 mb-4">
                            T√¨m hi·ªÉu th√™m v·ªÅ ch√∫ng t√¥i
                        </h2>
                        <p className="text-gray-600 text-lg">
                            Kh√°m ph√° c√¢u chuy·ªán, gi√° tr·ªã v√† con ng∆∞·ªùi ƒë·∫±ng sau th√†nh c√¥ng c·ªßa ch√∫ng t√¥i
                        </p>
                    </div>

                    <div className="bg-white rounded-3xl shadow-xl overflow-hidden">
                        <div className="flex border-b border-orange-100">
                            {(Object.keys(tabContent) as TabKey[]).map((tab) => (
                                <button
                                    key={tab}
                                    onClick={() => setActiveTab(tab)}
                                    className={`flex-1 py-4 px-6 text-center font-medium transition-all duration-300 ${activeTab === tab
                                        ? 'bg-gradient-orange text-white'
                                        : 'text-gray-600 hover:bg-orange-50'
                                        }`}
                                >
                                    {tab === 'mission' && 'S·ª© m·ªánh'}
                                    {tab === 'vision' && 'T·∫ßm nh√¨n'}
                                    {tab === 'team' && 'ƒê·ªôi ng≈©'}
                                </button>
                            ))}
                        </div>

                        <div className="p-8">
                            <h3 className="text-2xl font-bold text-gray-900 mb-4">
                                {tabContent[activeTab].title}
                            </h3>
                            <p className="text-gray-600 text-lg leading-relaxed">
                                {tabContent[activeTab].content}
                            </p>
                        </div>
                    </div>
                </div>
            </section>

            {/* Values Section */}
            <section className="py-16 px-6 bg-white">
                <div className="max-w-6xl mx-auto">
                    <div className="text-center mb-12">
                        <h2 className="text-4xl font-bold text-gray-900 mb-4">
                            Gi√° tr·ªã c·ªët l√µi
                        </h2>
                        <p className="text-gray-600 text-lg max-w-2xl mx-auto">
                            S·ª± s√°ng t·∫°o: M·ªói s·∫£n ph·∫©m s·∫Ω l√† m·ªôt s·ª± s√°ng t·∫°o trong thi·∫øt k·∫ø. ‚ÄúDN‚Äù lu√¥n mong mu·ªën mang ƒë·∫øn nhi·ªÅu s·ª± l·ª±a ch·ªçn Bi·∫øt ∆°n: Nh·ªØng g√≥p √Ω, ph·∫£n h·ªìi c·ªßa kh√°ch h√†ng s·∫Ω mang t√≠nh x√¢y d·ª±ng trong su·ªët qu√° tr√¨nh ph√°t tri·ªÉn v√† l√† t√†i s·∫£n qu√Ω gi√° m√† Nesty nh·∫≠n ƒë∆∞·ª£c. Ch√∫ng t√¥i s·∫Ω c·ªë g·∫Øng c·∫£i ti·∫øn v√† ho√†n thi·ªán m·ªói ng√†y. Ch·∫•t l∆∞·ª£ng: S·ª± chƒÉm s√≥c ƒë·∫∑c bi·ªát ƒë·∫øn c√°c chi ti·∫øt, v·∫≠t li·ªáu v√† quy tr√¨nh s·∫£n xu·∫•t c√≥ th·ªÉ gi√∫p doanh nghi·ªáp t·∫°o ra s·∫£n ph·∫©m ƒë·ªôc ƒë√°o v√† c√≥ gi√° tr·ªã th·ªã tr∆∞·ªùng.
                        </p>
                    </div>

                    <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
                        {values.map((value, index) => (
                            <div key={index} className="bg-gradient-orange-light p-8 rounded-3xl hover-lift group">
                                <div className="w-16 h-16 mb-6 bg-gradient-orange rounded-2xl flex items-center justify-center group-hover:animate-glow">
                                    <value.icon className="w-8 h-8 text-white" />
                                </div>
                                <h3 className="text-xl font-bold text-gray-900 mb-3">
                                    {value.title}
                                </h3>
                                <p className="text-gray-600 leading-relaxed">
                                    {value.description}
                                </p>
                            </div>
                        ))}
                    </div>
                </div>
            </section>

            {/* Timeline Section */}
            <section className="py-16 px-6 bg-gradient-to-r from-orange-50 to-orange-100">
                <div className="max-w-4xl mx-auto">
                    <div className="text-center mb-12">
                        <h2 className="text-4xl font-bold text-gray-900 mb-4">
                            H√†nh tr√¨nh c·ªßa ch√∫ng t√¥i
                        </h2>
                        <p className="text-gray-600 text-lg">
                            T·ª´ nh·ªØng b∆∞·ªõc ƒë·∫ßu khi√™m t·ªën ƒë·∫øn th√†nh c√¥ng nh∆∞ ng√†y h√¥m nay
                        </p>
                    </div>

                    <div className="relative">
                        <div className="absolute left-8 top-0 bottom-0 w-0.5 bg-gradient-orange"></div>

                        {timeline.map((item, index) => (
                            <div key={index} className="relative flex items-start mb-12 last:mb-0">
                                <div className="flex-shrink-0 w-16 h-16 bg-gradient-orange rounded-full flex items-center justify-center animate-pulse-orange">
                                    <CheckCircle className="w-8 h-8 text-white" />
                                </div>
                                <div className="ml-8 bg-white p-6 rounded-2xl shadow-lg hover-lift flex-1">
                                    <div className="text-sm font-bold text-orange-600 mb-1">
                                        {item.year}
                                    </div>
                                    <h3 className="text-xl font-bold text-gray-900 mb-2">
                                        {item.title}
                                    </h3>
                                    <p className="text-gray-600">
                                        {item.description}
                                    </p>
                                </div>
                            </div>
                        ))}
                    </div>
                </div>
            </section>
        </div>
    );
}